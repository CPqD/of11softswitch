lib/vconn.c:#include "oflib-exp/ofl-exp-match.h"
lib/.deps/vconn.Po: oflib-exp/../oflib/ofl-messages.h oflib-exp/ofl-exp-match.h \
lib/.deps/vconn.Po:oflib-exp/ofl-exp-match.h:
lib/automake.mk:                           oflib-exp/ofl-exp-nicira.o \
lib/automake.mk:			   oflib-exp/ofl-exp-match.o \
lib/automake.mk:			   oflib-exp/ofl-exp-ext-messages.o \
lib/automake.mk:                           oflib-exp/ofl-exp-openflow.o
Binary file lib/libopenflow.a matches
Makefile:	oflib-exp/ofl-exp.o oflib-exp/ofl-exp-nicira.o \
Makefile:	oflib-exp/ofl-exp-match.o oflib-exp/ofl-exp-ext-messages.o \
Makefile:	oflib-exp/ofl-exp-openflow.o
Makefile:	oflib-exp/ofl-exp-ext-messages.$(OBJEXT) \
Makefile:	oflib-exp/ofl-exp-match.$(OBJEXT) \
Makefile:	oflib-exp/ofl-exp-nicira.$(OBJEXT) \
Makefile:	oflib-exp/ofl-exp-openflow.$(OBJEXT)
Makefile:                           oflib-exp/ofl-exp-nicira.o \
Makefile:			   oflib-exp/ofl-exp-match.o \
Makefile:			   oflib-exp/ofl-exp-ext-messages.o \
Makefile:                           oflib-exp/ofl-exp-openflow.o
Makefile:	oflib-exp/ofl-exp-ext-messages.c \
Makefile:	oflib-exp/ofl-exp-ext-messages.h \
Makefile:	oflib-exp/ofl-exp-match.c \
Makefile:	oflib-exp/ofl-exp-match.h \
Makefile:	oflib-exp/ofl-exp-nicira.c \
Makefile:	oflib-exp/ofl-exp-nicira.h \
Makefile:	oflib-exp/ofl-exp-openflow.c \
Makefile:	oflib-exp/ofl-exp-openflow.h
Makefile:oflib-exp/ofl-exp-ext-messages.$(OBJEXT): oflib-exp/$(am__dirstamp) \
Makefile:oflib-exp/ofl-exp-match.$(OBJEXT): oflib-exp/$(am__dirstamp) \
Makefile:oflib-exp/ofl-exp-nicira.$(OBJEXT): oflib-exp/$(am__dirstamp) \
Makefile:oflib-exp/ofl-exp-openflow.$(OBJEXT): oflib-exp/$(am__dirstamp) \
Makefile:	-rm -f oflib-exp/ofl-exp-ext-messages.$(OBJEXT)
Makefile:	-rm -f oflib-exp/ofl-exp-match.$(OBJEXT)
Makefile:	-rm -f oflib-exp/ofl-exp-nicira.$(OBJEXT)
Makefile:	-rm -f oflib-exp/ofl-exp-openflow.$(OBJEXT)
Makefile:include oflib-exp/$(DEPDIR)/ofl-exp-ext-messages.Po
Makefile:include oflib-exp/$(DEPDIR)/ofl-exp-match.Po
Makefile:include oflib-exp/$(DEPDIR)/ofl-exp-nicira.Po
Makefile:include oflib-exp/$(DEPDIR)/ofl-exp-openflow.Po
Makefile.in:	oflib-exp/ofl-exp.o oflib-exp/ofl-exp-nicira.o \
Makefile.in:	oflib-exp/ofl-exp-match.o oflib-exp/ofl-exp-ext-messages.o \
Makefile.in:	oflib-exp/ofl-exp-openflow.o
Makefile.in:	oflib-exp/ofl-exp-ext-messages.$(OBJEXT) \
Makefile.in:	oflib-exp/ofl-exp-match.$(OBJEXT) \
Makefile.in:	oflib-exp/ofl-exp-nicira.$(OBJEXT) \
Makefile.in:	oflib-exp/ofl-exp-openflow.$(OBJEXT)
Makefile.in:                           oflib-exp/ofl-exp-nicira.o \
Makefile.in:			   oflib-exp/ofl-exp-match.o \
Makefile.in:			   oflib-exp/ofl-exp-ext-messages.o \
Makefile.in:                           oflib-exp/ofl-exp-openflow.o
Makefile.in:	oflib-exp/ofl-exp-ext-messages.c \
Makefile.in:	oflib-exp/ofl-exp-ext-messages.h \
Makefile.in:	oflib-exp/ofl-exp-match.c \
Makefile.in:	oflib-exp/ofl-exp-match.h \
Makefile.in:	oflib-exp/ofl-exp-nicira.c \
Makefile.in:	oflib-exp/ofl-exp-nicira.h \
Makefile.in:	oflib-exp/ofl-exp-openflow.c \
Makefile.in:	oflib-exp/ofl-exp-openflow.h
Makefile.in:oflib-exp/ofl-exp-ext-messages.$(OBJEXT): oflib-exp/$(am__dirstamp) \
Makefile.in:oflib-exp/ofl-exp-match.$(OBJEXT): oflib-exp/$(am__dirstamp) \
Makefile.in:oflib-exp/ofl-exp-nicira.$(OBJEXT): oflib-exp/$(am__dirstamp) \
Makefile.in:oflib-exp/ofl-exp-openflow.$(OBJEXT): oflib-exp/$(am__dirstamp) \
Makefile.in:	-rm -f oflib-exp/ofl-exp-ext-messages.$(OBJEXT)
Makefile.in:	-rm -f oflib-exp/ofl-exp-match.$(OBJEXT)
Makefile.in:	-rm -f oflib-exp/ofl-exp-nicira.$(OBJEXT)
Makefile.in:	-rm -f oflib-exp/ofl-exp-openflow.$(OBJEXT)
Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@oflib-exp/$(DEPDIR)/ofl-exp-ext-messages.Po@am__quote@
Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@oflib-exp/$(DEPDIR)/ofl-exp-match.Po@am__quote@
Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@oflib-exp/$(DEPDIR)/ofl-exp-nicira.Po@am__quote@
Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@oflib-exp/$(DEPDIR)/ofl-exp-openflow.Po@am__quote@
match:oflib/ofl-messages-unpack.c:            if (exp == NULL || exp->msg == NULL || exp->msg->unpack == NULL) {
match:oflib/ofl-messages-unpack.c:                error = exp->msg->unpack(oh, &len, (struct ofl_msg_experimenter **)msg);
match:oflib/ofl-messages-pack.c:            if (exp == NULL || exp->msg == NULL || exp->msg->pack == NULL) {
match:oflib/ofl-messages-pack.c:                error = exp->msg->pack((struct ofl_msg_experimenter *)msg, buf, buf_len);
match:oflib/ofl-messages-print.c:            if (exp == NULL || exp->msg == NULL || exp->msg->to_string == NULL) {
match:oflib/ofl-messages-print.c:                char *c = exp->msg->to_string((struct ofl_msg_experimenter *)msg);
match:oflib/ofl-messages.c:            if (exp == NULL || exp->msg == NULL || exp->msg->free == NULL) {
match:oflib/ofl-messages.c:            exp->msg->free((struct ofl_msg_experimenter *)msg);
match:oflib-exp/ofl-exp-openflow.c:    if (msg->experimenter_id == OPENFLOW_VENDOR_ID) {
match:oflib-exp/ofl-exp-openflow.c:    if (msg->experimenter_id == OPENFLOW_VENDOR_ID) {
match:oflib-exp/ofl-exp-openflow.c:    if (msg->experimenter_id == OPENFLOW_VENDOR_ID) {
match:oflib-exp/ofl-exp-openflow.c:        fprintf(stream, "exp{exp_id=\"%u\"}", msg->experimenter_id);
match:oflib-exp/ofl-exp-nicira.c:    if (msg->experimenter_id == NX_VENDOR_ID) {
match:oflib-exp/ofl-exp-nicira.c:    if (msg->experimenter_id == NX_VENDOR_ID) {
match:oflib-exp/ofl-exp-nicira.c:    if (msg->experimenter_id == NX_VENDOR_ID) {
match:oflib-exp/ofl-exp-nicira.c:        fprintf(stream, "exp{exp_id=\"%u\"}", msg->experimenter_id);
oflib/ofl-actions-pack.c:            if (exp == NULL || exp->act == NULL || exp->act->ofp_len == NULL) {
oflib/ofl-actions-pack.c:            return exp->act->ofp_len(action);
oflib/ofl-actions-pack.c:            if (exp == NULL || exp->act == NULL || exp->act->pack == NULL) {
oflib/ofl-actions-pack.c:            return exp->act->pack(src, dst);
oflib/ofl-structs-print.c:            if (exp == NULL || exp->inst == NULL || exp->inst->to_string == NULL) {
oflib/ofl-structs-print.c:                char *c = exp->inst->to_string(inst);
oflib/ofl-structs-print.c:            if (exp == NULL || exp->match == NULL || exp->match->to_string == NULL) {
oflib/ofl-structs-print.c:                char *c = exp->match->to_string(match);
oflib/ofl-actions-print.c:            if (exp == NULL || exp->act == NULL || exp->act->to_string == NULL) {
oflib/ofl-actions-print.c:                char *c = exp->act->to_string(act);
oflib/ofl-actions.c:            if (exp == NULL || exp->act == NULL || exp->act->free == NULL) {
oflib/ofl-actions.c:            exp->act->free(act);
oflib/ofl-messages-unpack.c:        if (exp == NULL || exp->stats == NULL || exp->stats->reply_unpack == NULL) {
oflib/ofl-messages-unpack.c:            error = exp->stats->req_unpack(os, len, (struct ofl_msg_stats_request_header **)msg);
oflib/ofl-messages-unpack.c:        if (exp == NULL || exp->stats == NULL || exp->stats->reply_unpack == NULL) {
oflib/ofl-messages-unpack.c:            error = exp->stats->reply_unpack(os, len, (struct ofl_msg_stats_reply_header **)msg);
oflib/ofl-messages-unpack.c:            if (exp == NULL || exp->msg == NULL || exp->msg->unpack == NULL) {
oflib/ofl-messages-unpack.c:                    error = exp->msg->unpack(oh, &len, (struct ofl_msg_experimenter **)msg);
oflib/ofl-structs-pack.c:            if (exp == NULL || exp->inst == NULL || exp->inst->ofp_len == NULL) {
oflib/ofl-structs-pack.c:            return exp->inst->ofp_len(instruction);
oflib/ofl-structs-pack.c:            if (exp == NULL || exp->inst == NULL || exp->inst->pack == NULL) {
oflib/ofl-structs-pack.c:            return exp->inst->pack((struct ofl_instruction_header *)src, dst);
oflib/ofl-structs-pack.c:            if (exp == NULL || exp->match == NULL || exp->match->ofp_len == NULL) {
oflib/ofl-structs-pack.c:            return exp->match->ofp_len(match);
oflib/ofl-structs-pack.c:            if (exp == NULL || exp->match == NULL || exp->match->pack == NULL) {
oflib/ofl-structs-pack.c:            return exp->match->pack(src, dst);
oflib/ofl-messages-pack.c:        if (exp == NULL || exp->stats == NULL || exp->stats->req_pack == NULL) {
oflib/ofl-messages-pack.c:            error = exp->stats->req_pack(msg, buf, buf_len);
oflib/ofl-messages-pack.c:            if (exp == NULL || exp->stats == NULL || exp->stats->reply_pack == NULL) {
oflib/ofl-messages-pack.c:                error = exp->stats->reply_pack(msg, buf, buf_len);
oflib/ofl-messages-pack.c:            if (exp == NULL || exp->msg == NULL || exp->msg->pack == NULL) {
oflib/ofl-messages-pack.c:                error = exp->msg->pack((struct ofl_msg_experimenter *)msg, buf, buf_len);
oflib/ofl-structs.c:            if (exp == NULL || exp->inst == NULL || exp->inst->free == NULL) {
oflib/ofl-structs.c:                exp->inst->free(inst);
oflib/ofl-structs.c:            if (exp == NULL || exp->match == NULL || exp->match->free == NULL) {
oflib/ofl-structs.c:                exp->match->free(match);
oflib/ofl-actions-unpack.c:            if (exp == NULL || exp->act == NULL || exp->act->unpack == NULL) {
oflib/ofl-actions-unpack.c:            error = exp->act->unpack(src, len, dst);
oflib/ofl-messages-print.c:        if (exp != NULL && exp->stats != NULL && exp->stats->req_to_string != NULL) {
oflib/ofl-messages-print.c:            char *c = exp->stats->req_to_string(msg);
oflib/ofl-messages-print.c:        if (exp != NULL && exp->stats != NULL && exp->stats->reply_to_string != NULL) {
oflib/ofl-messages-print.c:            char *c = exp->stats->reply_to_string(msg);
oflib/ofl-messages-print.c:            if (exp == NULL || exp->msg == NULL || exp->msg->to_string == NULL) {
oflib/ofl-messages-print.c:                char *c = exp->msg->to_string((struct ofl_msg_experimenter *)msg);
oflib/ofl-messages.c:            if (exp == NULL || exp->stats == NULL || exp->stats->req_free == NULL) {
oflib/ofl-messages.c:            exp->stats->req_free(msg);
oflib/ofl-messages.c:            if (exp == NULL || exp->stats || exp->stats->reply_free == NULL) {
oflib/ofl-messages.c:            exp->stats->reply_free(msg);
oflib/ofl-messages.c:            if (exp == NULL || exp->msg == NULL || exp->msg->free == NULL) {
oflib/ofl-messages.c:            exp->msg->free((struct ofl_msg_experimenter *)msg);
oflib/ofl-structs-unpack.c:            if (exp == NULL || exp->inst == NULL || exp->inst->unpack == NULL) {
oflib/ofl-structs-unpack.c:            error = exp->inst->unpack(src, &ilen, &inst);
oflib/ofl-structs-unpack.c:            if (exp == NULL || exp->match == NULL || exp->match->unpack == NULL) {
oflib/ofl-structs-unpack.c:            return exp->match->unpack(src, len, dst);
Binary file oflib-exp/ofl-exp-ext-messages-unpack.o matches
Binary file oflib-exp/ofl-exp-nicira.o matches
Binary file oflib-exp/ofl-exp-openflow.o matches
oflib-exp/ofl-exp-ext-messages.c:#include "ofl-exp-match.h"
oflib-exp/ofl-exp-ext-messages.c:#include "ofl-exp-ext-messages.h"
oflib-exp/ofl-exp-ext-messages.c:        switch (exp->type) {
oflib-exp/ofl-exp-ext-messages.c:        switch (exp->type){
Binary file oflib-exp/ofl-exp-ext-messages.o matches
Binary file oflib-exp/ofl-exp-ext-messages-pack.o matches
oflib-exp/.deps/ofl-exp-ext-messages-unpack.Po:oflib-exp/ofl-exp-ext-messages-unpack.o: \
oflib-exp/.deps/ofl-exp-ext-messages-unpack.Po: oflib-exp/ofl-exp-ext-messages-unpack.c /usr/include/stdio.h \
oflib-exp/.deps/ofl-exp-ext-messages-unpack.Po: lib/flex-array.h oflib-exp/ofl-exp-match.h include/openflow/match-ext.h \
oflib-exp/.deps/ofl-exp-ext-messages-unpack.Po: oflib-exp/ofl-exp-ext-messages.h \
oflib-exp/.deps/ofl-exp-ext-messages-unpack.Po:oflib-exp/ofl-exp-match.h:
oflib-exp/.deps/ofl-exp-ext-messages-unpack.Po:oflib-exp/ofl-exp-ext-messages.h:
oflib-exp/.deps/ofl-exp-match.Po:oflib-exp/ofl-exp-match.o: oflib-exp/ofl-exp-match.c /usr/include/stdio.h \
oflib-exp/.deps/ofl-exp-match.Po: oflib-exp/ofl-exp-match.h include/openflow/openflow.h \
oflib-exp/.deps/ofl-exp-match.Po:oflib-exp/ofl-exp-match.h:
oflib-exp/.deps/ofl-exp-nicira.Po:oflib-exp/ofl-exp-nicira.o: oflib-exp/ofl-exp-nicira.c \
oflib-exp/.deps/ofl-exp-nicira.Po: oflib-exp/ofl-exp-nicira.h oflib-exp/../oflib/ofl-structs.h \
oflib-exp/.deps/ofl-exp-nicira.Po:oflib-exp/ofl-exp-nicira.h:
oflib-exp/.deps/ofl-exp-ext-messages-pack.Po:oflib-exp/ofl-exp-ext-messages-pack.o: \
oflib-exp/.deps/ofl-exp-ext-messages-pack.Po: oflib-exp/ofl-exp-ext-messages-pack.c /usr/include/stdio.h \
oflib-exp/.deps/ofl-exp-ext-messages-pack.Po: lib/flex-array.h oflib-exp/ofl-exp-match.h include/openflow/match-ext.h \
oflib-exp/.deps/ofl-exp-ext-messages-pack.Po: oflib-exp/ofl-exp-ext-messages.h \
oflib-exp/.deps/ofl-exp-ext-messages-pack.Po:oflib-exp/ofl-exp-match.h:
oflib-exp/.deps/ofl-exp-ext-messages-pack.Po:oflib-exp/ofl-exp-ext-messages.h:
oflib-exp/.deps/ofl-exp-ext-messages.Po:oflib-exp/ofl-exp-ext-messages.o: oflib-exp/ofl-exp-ext-messages.c \
oflib-exp/.deps/ofl-exp-ext-messages.Po: lib/flex-array.h oflib-exp/ofl-exp-match.h include/openflow/match-ext.h \
oflib-exp/.deps/ofl-exp-ext-messages.Po: oflib-exp/ofl-exp-ext-messages.h \
oflib-exp/.deps/ofl-exp-ext-messages.Po:oflib-exp/ofl-exp-match.h:
oflib-exp/.deps/ofl-exp-ext-messages.Po:oflib-exp/ofl-exp-ext-messages.h:
oflib-exp/.deps/ofl-exp-openflow.Po:oflib-exp/ofl-exp-openflow.o: oflib-exp/ofl-exp-openflow.c \
oflib-exp/.deps/ofl-exp-openflow.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
oflib-exp/.deps/ofl-exp-openflow.Po:oflib-exp/ofl-exp-openflow.h:
oflib-exp/.deps/ofl-exp.Po: oflib-exp/ofl-exp-nicira.h oflib-exp/../oflib/ofl-structs.h \
oflib-exp/.deps/ofl-exp.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/ofl-exp-ext-messages.h \
oflib-exp/.deps/ofl-exp.Po:oflib-exp/ofl-exp-nicira.h:
oflib-exp/.deps/ofl-exp.Po:oflib-exp/ofl-exp-openflow.h:
oflib-exp/.deps/ofl-exp.Po:oflib-exp/ofl-exp-ext-messages.h:
oflib-exp/ofl-exp-match.c:#include "ofl-exp-match.h"
oflib-exp/ofl-exp.c:#include "ofl-exp-nicira.h"
oflib-exp/ofl-exp.c:#include "ofl-exp-openflow.h"
oflib-exp/ofl-exp.c:#include "ofl-exp-ext-messages.h"
oflib-exp/ofl-exp.c:    switch (htonl(exp->experimenter)) {
oflib-exp/ofl-exp.c:            OFL_LOG_WARN(LOG_MODULE, "Trying to unpack unknown EXPERIMENTER message (%u).", htonl(exp->experimenter));
Binary file oflib-exp/liboflib_exp.a matches
oflib-exp/automake.mk:	oflib-exp/ofl-exp-ext-messages.c \
oflib-exp/automake.mk:	oflib-exp/ofl-exp-ext-messages.h \
oflib-exp/automake.mk:	oflib-exp/ofl-exp-match.c \
oflib-exp/automake.mk:	oflib-exp/ofl-exp-match.h \
oflib-exp/automake.mk:	oflib-exp/ofl-exp-nicira.c \
oflib-exp/automake.mk:	oflib-exp/ofl-exp-nicira.h \
oflib-exp/automake.mk:	oflib-exp/ofl-exp-openflow.c \
oflib-exp/automake.mk:	oflib-exp/ofl-exp-openflow.h
oflib-exp/ofl-exp-openflow.c:#include "ofl-exp-openflow.h"
oflib-exp/ofl-exp-openflow.c:        switch (exp->type) {
oflib-exp/ofl-exp-openflow.c:                ofp->header.vendor  = htonl(exp->header.experimenter_id);
oflib-exp/ofl-exp-openflow.c:                ofp->header.subtype = htonl(exp->type);
oflib-exp/ofl-exp-openflow.c:                ofp->header.vendor  = htonl(exp->header.experimenter_id);
oflib-exp/ofl-exp-openflow.c:                ofp->header.subtype = htonl(exp->type);
oflib-exp/ofl-exp-openflow.c:    if (ntohl(exp->vendor) == OPENFLOW_VENDOR_ID) {
oflib-exp/ofl-exp-openflow.c:        switch (ntohl(exp->subtype)) {
oflib-exp/ofl-exp-openflow.c:                dst->header.header.experimenter_id = ntohl(exp->vendor);
oflib-exp/ofl-exp-openflow.c:                dst->header.type                   = ntohl(exp->subtype);
oflib-exp/ofl-exp-openflow.c:                dst->header.header.experimenter_id = ntohl(exp->vendor);
oflib-exp/ofl-exp-openflow.c:                dst->header.type                   = ntohl(exp->subtype);
oflib-exp/ofl-exp-openflow.c:        switch (exp->type) {
oflib-exp/ofl-exp-openflow.c:        switch (exp->type) {
oflib-exp/ofl-exp-openflow.c:                fprintf(stream, "%squeue{port=\"", exp->type == OFP_EXT_QUEUE_MODIFY ? "mod" : "del");
oflib-exp/ofl-exp-openflow.c:                fprintf(stream, "ofexp{type=\"%u\"}", exp->type);
oflib-exp/ofl-exp-nicira.c:#include "ofl-exp-nicira.h"
oflib-exp/ofl-exp-nicira.c:        switch (exp->type) {
oflib-exp/ofl-exp-nicira.c:                ofp->nxh.vendor =  htonl(exp->header.experimenter_id);
oflib-exp/ofl-exp-nicira.c:                ofp->nxh.subtype = htonl(exp->type);
oflib-exp/ofl-exp-nicira.c:    if (ntohl(exp->vendor) == NX_VENDOR_ID) {
oflib-exp/ofl-exp-nicira.c:        switch (ntohl(exp->subtype)) {
oflib-exp/ofl-exp-nicira.c:                dst->header.header.experimenter_id = ntohl(exp->vendor);
oflib-exp/ofl-exp-nicira.c:                dst->header.type                   = ntohl(exp->subtype);
oflib-exp/ofl-exp-nicira.c:        switch (exp->type) {
oflib-exp/ofl-exp-nicira.c:        switch (exp->type) {
oflib-exp/ofl-exp-nicira.c:                              exp->type == NXT_ROLE_REQUEST ? "rolereq" : "rolerep",
oflib-exp/ofl-exp-nicira.c:                fprintf(stream, "ofexp{type=\"%u\"}", exp->type);
Binary file oflib-exp/ofl-exp-match.o matches
pack:lib/automake.mk:                           oflib-exp/ofl-exp-nicira.o \
pack:lib/automake.mk:                           oflib-exp/ofl-exp-openflow.o
pack:Makefile:	oflib-exp/ofl-exp.o oflib-exp/ofl-exp-nicira.o \
pack:Makefile:	oflib-exp/ofl-exp-openflow.o
pack:Makefile:	oflib-exp/ofl-exp-nicira.$(OBJEXT) \
pack:Makefile:	oflib-exp/ofl-exp-openflow.$(OBJEXT)
pack:Makefile:                           oflib-exp/ofl-exp-nicira.o \
pack:Makefile:                           oflib-exp/ofl-exp-openflow.o
pack:Makefile:	oflib-exp/ofl-exp-nicira.c \
pack:Makefile:	oflib-exp/ofl-exp-nicira.h \
pack:Makefile:	oflib-exp/ofl-exp-openflow.c \
pack:Makefile:	oflib-exp/ofl-exp-openflow.h
pack:Makefile:oflib-exp/ofl-exp-nicira.$(OBJEXT): oflib-exp/$(am__dirstamp) \
pack:Makefile:oflib-exp/ofl-exp-openflow.$(OBJEXT): oflib-exp/$(am__dirstamp) \
pack:Makefile:	-rm -f oflib-exp/ofl-exp-nicira.$(OBJEXT)
pack:Makefile:	-rm -f oflib-exp/ofl-exp-openflow.$(OBJEXT)
pack:Makefile:include oflib-exp/$(DEPDIR)/ofl-exp-nicira.Po
pack:Makefile:include oflib-exp/$(DEPDIR)/ofl-exp-openflow.Po
pack:Makefile.in:	oflib-exp/ofl-exp.o oflib-exp/ofl-exp-nicira.o \
pack:Makefile.in:	oflib-exp/ofl-exp-openflow.o
pack:Makefile.in:	oflib-exp/ofl-exp-nicira.$(OBJEXT) \
pack:Makefile.in:	oflib-exp/ofl-exp-openflow.$(OBJEXT)
pack:Makefile.in:                           oflib-exp/ofl-exp-nicira.o \
pack:Makefile.in:                           oflib-exp/ofl-exp-openflow.o
pack:Makefile.in:	oflib-exp/ofl-exp-nicira.c \
pack:Makefile.in:	oflib-exp/ofl-exp-nicira.h \
pack:Makefile.in:	oflib-exp/ofl-exp-openflow.c \
pack:Makefile.in:	oflib-exp/ofl-exp-openflow.h
pack:Makefile.in:oflib-exp/ofl-exp-nicira.$(OBJEXT): oflib-exp/$(am__dirstamp) \
pack:Makefile.in:oflib-exp/ofl-exp-openflow.$(OBJEXT): oflib-exp/$(am__dirstamp) \
pack:Makefile.in:	-rm -f oflib-exp/ofl-exp-nicira.$(OBJEXT)
pack:Makefile.in:	-rm -f oflib-exp/ofl-exp-openflow.$(OBJEXT)
pack:Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@oflib-exp/$(DEPDIR)/ofl-exp-nicira.Po@am__quote@
pack:Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@oflib-exp/$(DEPDIR)/ofl-exp-openflow.Po@am__quote@
pack:match:oflib/ofl-messages-unpack.c:            if (exp == NULL || exp->msg == NULL || exp->msg->unpack == NULL) {
pack:match:oflib/ofl-messages-unpack.c:                error = exp->msg->unpack(oh, &len, (struct ofl_msg_experimenter **)msg);
pack:match:oflib/ofl-messages-pack.c:            if (exp == NULL || exp->msg == NULL || exp->msg->pack == NULL) {
pack:match:oflib/ofl-messages-pack.c:                error = exp->msg->pack((struct ofl_msg_experimenter *)msg, buf, buf_len);
pack:match:oflib/ofl-messages-print.c:            if (exp == NULL || exp->msg == NULL || exp->msg->to_string == NULL) {
pack:match:oflib/ofl-messages-print.c:                char *c = exp->msg->to_string((struct ofl_msg_experimenter *)msg);
pack:match:oflib/ofl-messages.c:            if (exp == NULL || exp->msg == NULL || exp->msg->free == NULL) {
pack:match:oflib/ofl-messages.c:            exp->msg->free((struct ofl_msg_experimenter *)msg);
pack:match:oflib-exp/ofl-exp-openflow.c:    if (msg->experimenter_id == OPENFLOW_VENDOR_ID) {
pack:match:oflib-exp/ofl-exp-openflow.c:    if (msg->experimenter_id == OPENFLOW_VENDOR_ID) {
pack:match:oflib-exp/ofl-exp-openflow.c:    if (msg->experimenter_id == OPENFLOW_VENDOR_ID) {
pack:match:oflib-exp/ofl-exp-openflow.c:        fprintf(stream, "exp{exp_id=\"%u\"}", msg->experimenter_id);
pack:match:oflib-exp/ofl-exp-nicira.c:    if (msg->experimenter_id == NX_VENDOR_ID) {
pack:match:oflib-exp/ofl-exp-nicira.c:    if (msg->experimenter_id == NX_VENDOR_ID) {
pack:match:oflib-exp/ofl-exp-nicira.c:    if (msg->experimenter_id == NX_VENDOR_ID) {
pack:match:oflib-exp/ofl-exp-nicira.c:        fprintf(stream, "exp{exp_id=\"%u\"}", msg->experimenter_id);
pack:oflib/ofl-actions-pack.c:            if (exp == NULL || exp->act == NULL || exp->act->ofp_len == NULL) {
pack:oflib/ofl-actions-pack.c:            return exp->act->ofp_len(action);
pack:oflib/ofl-actions-pack.c:            if (exp == NULL || exp->act == NULL || exp->act->pack == NULL) {
pack:oflib/ofl-actions-pack.c:            return exp->act->pack(src, dst);
pack:oflib/ofl-structs-print.c:            if (exp == NULL || exp->inst == NULL || exp->inst->to_string == NULL) {
pack:oflib/ofl-structs-print.c:                char *c = exp->inst->to_string(inst);
pack:oflib/ofl-structs-print.c:            if (exp == NULL || exp->match == NULL || exp->match->to_string == NULL) {
pack:oflib/ofl-structs-print.c:                char *c = exp->match->to_string(match);
pack:oflib/ofl-actions-print.c:            if (exp == NULL || exp->act == NULL || exp->act->to_string == NULL) {
pack:oflib/ofl-actions-print.c:                char *c = exp->act->to_string(act);
pack:oflib/ofl-actions.c:            if (exp == NULL || exp->act == NULL || exp->act->free == NULL) {
pack:oflib/ofl-actions.c:            exp->act->free(act);
pack:oflib/ofl-messages-unpack.c:        if (exp == NULL || exp->stats == NULL || exp->stats->reply_unpack == NULL) {
pack:oflib/ofl-messages-unpack.c:            error = exp->stats->req_unpack(os, len, (struct ofl_msg_stats_request_header **)msg);
pack:oflib/ofl-messages-unpack.c:        if (exp == NULL || exp->stats == NULL || exp->stats->reply_unpack == NULL) {
pack:oflib/ofl-messages-unpack.c:            error = exp->stats->reply_unpack(os, len, (struct ofl_msg_stats_reply_header **)msg);
pack:oflib/ofl-messages-unpack.c:            if (exp == NULL || exp->msg == NULL || exp->msg->unpack == NULL) {
pack:oflib/ofl-messages-unpack.c:                error = exp->msg->unpack(oh, &len, (struct ofl_msg_experimenter **)msg);
pack:oflib/ofl-structs-pack.c:            if (exp == NULL || exp->inst == NULL || exp->inst->ofp_len == NULL) {
pack:oflib/ofl-structs-pack.c:            return exp->inst->ofp_len(instruction);
pack:oflib/ofl-structs-pack.c:            if (exp == NULL || exp->inst == NULL || exp->inst->pack == NULL) {
pack:oflib/ofl-structs-pack.c:            return exp->inst->pack((struct ofl_instruction_header *)src, dst);
pack:oflib/ofl-structs-pack.c:            if (exp == NULL || exp->match == NULL || exp->match->ofp_len == NULL) {
pack:oflib/ofl-structs-pack.c:            return exp->match->ofp_len(match);
pack:oflib/ofl-structs-pack.c:            if (exp == NULL || exp->match == NULL || exp->match->pack == NULL) {
pack:oflib/ofl-structs-pack.c:            return exp->match->pack(src, dst);
pack:oflib/ofl-messages-pack.c:        if (exp == NULL || exp->stats == NULL || exp->stats->req_pack == NULL) {
pack:oflib/ofl-messages-pack.c:            error = exp->stats->req_pack(msg, buf, buf_len);
pack:oflib/ofl-messages-pack.c:            if (exp == NULL || exp->stats == NULL || exp->stats->reply_pack == NULL) {
pack:oflib/ofl-messages-pack.c:                error = exp->stats->reply_pack(msg, buf, buf_len);
pack:oflib/ofl-messages-pack.c:            if (exp == NULL || exp->msg == NULL || exp->msg->pack == NULL) {
pack:oflib/ofl-messages-pack.c:                error = exp->msg->pack((struct ofl_msg_experimenter *)msg, buf, buf_len);
pack:oflib/ofl-structs.c:            if (exp == NULL || exp->inst == NULL || exp->inst->free == NULL) {
pack:oflib/ofl-structs.c:                exp->inst->free(inst);
pack:oflib/ofl-structs.c:            if (exp == NULL || exp->match == NULL || exp->match->free == NULL) {
pack:oflib/ofl-structs.c:                exp->match->free(match);
pack:oflib/ofl-actions-unpack.c:            if (exp == NULL || exp->act == NULL || exp->act->unpack == NULL) {
pack:oflib/ofl-actions-unpack.c:            error = exp->act->unpack(src, len, dst);
pack:oflib/ofl-messages-print.c:        if (exp != NULL && exp->stats != NULL && exp->stats->req_to_string != NULL) {
pack:oflib/ofl-messages-print.c:            char *c = exp->stats->req_to_string(msg);
pack:oflib/ofl-messages-print.c:        if (exp != NULL && exp->stats != NULL && exp->stats->reply_to_string != NULL) {
pack:oflib/ofl-messages-print.c:            char *c = exp->stats->reply_to_string(msg);
pack:oflib/ofl-messages-print.c:            if (exp == NULL || exp->msg == NULL || exp->msg->to_string == NULL) {
pack:oflib/ofl-messages-print.c:                char *c = exp->msg->to_string((struct ofl_msg_experimenter *)msg);
pack:oflib/ofl-messages.c:            if (exp == NULL || exp->stats == NULL || exp->stats->req_free == NULL) {
pack:oflib/ofl-messages.c:            exp->stats->req_free(msg);
pack:oflib/ofl-messages.c:            if (exp == NULL || exp->stats || exp->stats->reply_free == NULL) {
pack:oflib/ofl-messages.c:            exp->stats->reply_free(msg);
pack:oflib/ofl-messages.c:            if (exp == NULL || exp->msg == NULL || exp->msg->free == NULL) {
pack:oflib/ofl-messages.c:            exp->msg->free((struct ofl_msg_experimenter *)msg);
pack:oflib/ofl-structs-unpack.c:            if (exp == NULL || exp->inst == NULL || exp->inst->unpack == NULL) {
pack:oflib/ofl-structs-unpack.c:            error = exp->inst->unpack(src, &ilen, &inst);
pack:oflib/ofl-structs-unpack.c:            if (exp == NULL || exp->match == NULL || exp->match->unpack == NULL) {
pack:oflib/ofl-structs-unpack.c:            return exp->match->unpack(src, len, dst);
pack:oflib-exp/.deps/ofl-exp-nicira.Po:oflib-exp/ofl-exp-nicira.o: oflib-exp/ofl-exp-nicira.c \
pack:oflib-exp/.deps/ofl-exp-nicira.Po: oflib-exp/ofl-exp-nicira.h oflib-exp/../oflib/ofl-structs.h \
pack:oflib-exp/.deps/ofl-exp-nicira.Po:oflib-exp/ofl-exp-nicira.h:
pack:oflib-exp/.deps/ofl-exp-openflow.Po:oflib-exp/ofl-exp-openflow.o: oflib-exp/ofl-exp-openflow.c \
pack:oflib-exp/.deps/ofl-exp-openflow.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:oflib-exp/.deps/ofl-exp-openflow.Po:oflib-exp/ofl-exp-openflow.h:
pack:oflib-exp/.deps/ofl-exp.Po: oflib-exp/ofl-exp-nicira.h oflib-exp/../oflib/ofl-structs.h \
pack:oflib-exp/.deps/ofl-exp.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-log.h \
pack:oflib-exp/.deps/ofl-exp.Po:oflib-exp/ofl-exp-nicira.h:
pack:oflib-exp/.deps/ofl-exp.Po:oflib-exp/ofl-exp-openflow.h:
pack:oflib-exp/ofl-exp.c:#include "ofl-exp-nicira.h"
pack:oflib-exp/ofl-exp.c:#include "ofl-exp-openflow.h"
pack:oflib-exp/ofl-exp.c:    switch (htonl(exp->experimenter)) {
pack:oflib-exp/ofl-exp.c:            OFL_LOG_WARN(LOG_MODULE, "Trying to unpack unknown EXPERIMENTER message (%u).", htonl(exp->experimenter));
pack:oflib-exp/automake.mk:	oflib-exp/ofl-exp-nicira.c \
pack:oflib-exp/automake.mk:	oflib-exp/ofl-exp-nicira.h \
pack:oflib-exp/automake.mk:	oflib-exp/ofl-exp-openflow.c \
pack:oflib-exp/automake.mk:	oflib-exp/ofl-exp-openflow.h
pack:oflib-exp/ofl-exp-openflow.c:#include "ofl-exp-openflow.h"
pack:oflib-exp/ofl-exp-openflow.c:        switch (exp->type) {
pack:oflib-exp/ofl-exp-openflow.c:                ofp->header.vendor  = htonl(exp->header.experimenter_id);
pack:oflib-exp/ofl-exp-openflow.c:                ofp->header.subtype = htonl(exp->type);
pack:oflib-exp/ofl-exp-openflow.c:                ofp->header.vendor  = htonl(exp->header.experimenter_id);
pack:oflib-exp/ofl-exp-openflow.c:                ofp->header.subtype = htonl(exp->type);
pack:oflib-exp/ofl-exp-openflow.c:    if (ntohl(exp->vendor) == OPENFLOW_VENDOR_ID) {
pack:oflib-exp/ofl-exp-openflow.c:        switch (ntohl(exp->subtype)) {
pack:oflib-exp/ofl-exp-openflow.c:                dst->header.header.experimenter_id = ntohl(exp->vendor);
pack:oflib-exp/ofl-exp-openflow.c:                dst->header.type                   = ntohl(exp->subtype);
pack:oflib-exp/ofl-exp-openflow.c:                dst->header.header.experimenter_id = ntohl(exp->vendor);
pack:oflib-exp/ofl-exp-openflow.c:                dst->header.type                   = ntohl(exp->subtype);
pack:oflib-exp/ofl-exp-openflow.c:        switch (exp->type) {
pack:oflib-exp/ofl-exp-openflow.c:        switch (exp->type) {
pack:oflib-exp/ofl-exp-openflow.c:                fprintf(stream, "%squeue{port=\"", exp->type == OFP_EXT_QUEUE_MODIFY ? "mod" : "del");
pack:oflib-exp/ofl-exp-openflow.c:                fprintf(stream, "ofexp{type=\"%u\"}", exp->type);
pack:oflib-exp/ofl-exp-nicira.c:#include "ofl-exp-nicira.h"
pack:oflib-exp/ofl-exp-nicira.c:        switch (exp->type) {
pack:oflib-exp/ofl-exp-nicira.c:                ofp->nxh.vendor =  htonl(exp->header.experimenter_id);
pack:oflib-exp/ofl-exp-nicira.c:                ofp->nxh.subtype = htonl(exp->type);
pack:oflib-exp/ofl-exp-nicira.c:    if (ntohl(exp->vendor) == NX_VENDOR_ID) {
pack:oflib-exp/ofl-exp-nicira.c:        switch (ntohl(exp->subtype)) {
pack:oflib-exp/ofl-exp-nicira.c:                dst->header.header.experimenter_id = ntohl(exp->vendor);
pack:oflib-exp/ofl-exp-nicira.c:                dst->header.type                   = ntohl(exp->subtype);
pack:oflib-exp/ofl-exp-nicira.c:        switch (exp->type) {
pack:oflib-exp/ofl-exp-nicira.c:        switch (exp->type) {
pack:oflib-exp/ofl-exp-nicira.c:                              exp->type == NXT_ROLE_REQUEST ? "rolereq" : "rolerep",
pack:oflib-exp/ofl-exp-nicira.c:                fprintf(stream, "ofexp{type=\"%u\"}", exp->type);
pack:udatapath/datapath.h:#include "oflib-exp/ofl-exp-nicira.h"
pack:udatapath/dp_ports.h:#include "oflib-exp/ofl-exp-openflow.h"
pack:udatapath/.deps/udatapath_ofdatapath-dp_exp.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:udatapath/.deps/udatapath_ofdatapath-dp_exp.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
pack:udatapath/.deps/udatapath_ofdatapath-dp_exp.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-dp_exp.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-group_table.Po: oflib/ofl-messages.h oflib/ofl-structs.h oflib-exp/ofl-exp-openflow.h \
pack:udatapath/.deps/udatapath_ofdatapath-group_table.Po: include/openflow/nicira-ext.h oflib-exp/ofl-exp-nicira.h lib/timeval.h \
pack:udatapath/.deps/udatapath_ofdatapath-group_table.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-group_table.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-dp_buffers.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:udatapath/.deps/udatapath_ofdatapath-dp_buffers.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
pack:udatapath/.deps/udatapath_ofdatapath-dp_buffers.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-dp_buffers.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-flow_table.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:udatapath/.deps/udatapath_ofdatapath-flow_table.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
pack:udatapath/.deps/udatapath_ofdatapath-flow_table.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-flow_table.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-packet.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:udatapath/.deps/udatapath_ofdatapath-packet.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
pack:udatapath/.deps/udatapath_ofdatapath-packet.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-packet.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-dp_ports.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:udatapath/.deps/udatapath_ofdatapath-dp_ports.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
pack:udatapath/.deps/udatapath_ofdatapath-dp_ports.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-dp_ports.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-dp_control.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:udatapath/.deps/udatapath_ofdatapath-dp_control.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
pack:udatapath/.deps/udatapath_ofdatapath-dp_control.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-dp_control.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-udatapath.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:udatapath/.deps/udatapath_ofdatapath-udatapath.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
pack:udatapath/.deps/udatapath_ofdatapath-udatapath.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-udatapath.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-dp_actions.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:udatapath/.deps/udatapath_ofdatapath-dp_actions.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
pack:udatapath/.deps/udatapath_ofdatapath-dp_actions.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-dp_actions.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-flow_entry.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:udatapath/.deps/udatapath_ofdatapath-flow_entry.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
pack:udatapath/.deps/udatapath_ofdatapath-flow_entry.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-flow_entry.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-pipeline.Po: oflib/ofl.h oflib-exp/ofl-exp-openflow.h \
pack:udatapath/.deps/udatapath_ofdatapath-pipeline.Po: include/openflow/nicira-ext.h oflib-exp/ofl-exp-nicira.h \
pack:udatapath/.deps/udatapath_ofdatapath-pipeline.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-pipeline.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-group_entry.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:udatapath/.deps/udatapath_ofdatapath-group_entry.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
pack:udatapath/.deps/udatapath_ofdatapath-group_entry.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-group_entry.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-action_set.Po: oflib/ofl.h oflib-exp/ofl-exp-openflow.h \
pack:udatapath/.deps/udatapath_ofdatapath-action_set.Po: include/openflow/nicira-ext.h oflib-exp/ofl-exp-nicira.h \
pack:udatapath/.deps/udatapath_ofdatapath-action_set.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-action_set.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-datapath.Po: oflib/ofl-messages.h oflib/ofl-structs.h oflib-exp/ofl-exp-openflow.h \
pack:udatapath/.deps/udatapath_ofdatapath-datapath.Po: include/openflow/nicira-ext.h oflib-exp/ofl-exp-nicira.h \
pack:udatapath/.deps/udatapath_ofdatapath-datapath.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-datapath.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/.deps/udatapath_ofdatapath-packet_handle_std.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:udatapath/.deps/udatapath_ofdatapath-packet_handle_std.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
pack:udatapath/.deps/udatapath_ofdatapath-packet_handle_std.Po:oflib-exp/ofl-exp-openflow.h:
pack:udatapath/.deps/udatapath_ofdatapath-packet_handle_std.Po:oflib-exp/ofl-exp-nicira.h:
pack:udatapath/datapath.c:#include "oflib-exp/ofl-exp-nicira.h"
pack:udatapath/dp_exp.c:#include "oflib-exp/ofl-exp-openflow.h"
pack:udatapath/dp_exp.c:#include "oflib-exp/ofl-exp-nicira.h"
pack:udatapath/dp_exp.c:            switch(exp->type) {
pack:udatapath/dp_exp.c:                	VLOG_WARN_RL(LOG_MODULE, &rl, "Trying to handle unknown experimenter type (%u).", exp->type);
pack:udatapath/dp_exp.c:            switch (exp->type) {
pack:udatapath/dp_ports.c:#include "oflib-exp/ofl-exp-openflow.h"
pack:utilities/.deps/dpctl.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
pack:utilities/.deps/dpctl.Po:oflib-exp/ofl-exp-openflow.h:
pack:utilities/dpctl.c:#include "oflib-exp/ofl-exp-openflow.h"
Binary file secchan/ofprotocol matches
Binary file udatapath/udatapath_ofdatapath-dp_ports.o matches
Binary file udatapath/udatapath_ofdatapath-dp_exp.o matches
udatapath/datapath.h:#include "oflib-exp/ofl-exp-nicira.h"
udatapath/dp_ports.h:#include "oflib-exp/ofl-exp-openflow.h"
Binary file udatapath/ofdatapath matches
Binary file udatapath/udatapath_ofdatapath-datapath.o matches
udatapath/.deps/udatapath_ofdatapath-dp_exp.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
udatapath/.deps/udatapath_ofdatapath-dp_exp.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
udatapath/.deps/udatapath_ofdatapath-dp_exp.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-dp_exp.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-group_table.Po: oflib/ofl-messages.h oflib/ofl-structs.h oflib-exp/ofl-exp-openflow.h \
udatapath/.deps/udatapath_ofdatapath-group_table.Po: include/openflow/nicira-ext.h oflib-exp/ofl-exp-nicira.h lib/timeval.h \
udatapath/.deps/udatapath_ofdatapath-group_table.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-group_table.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-dp_buffers.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
udatapath/.deps/udatapath_ofdatapath-dp_buffers.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
udatapath/.deps/udatapath_ofdatapath-dp_buffers.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-dp_buffers.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-flow_table.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
udatapath/.deps/udatapath_ofdatapath-flow_table.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
udatapath/.deps/udatapath_ofdatapath-flow_table.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-flow_table.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-packet.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
udatapath/.deps/udatapath_ofdatapath-packet.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
udatapath/.deps/udatapath_ofdatapath-packet.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-packet.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-dp_ports.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
udatapath/.deps/udatapath_ofdatapath-dp_ports.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
udatapath/.deps/udatapath_ofdatapath-dp_ports.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-dp_ports.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-dp_control.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
udatapath/.deps/udatapath_ofdatapath-dp_control.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
udatapath/.deps/udatapath_ofdatapath-dp_control.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-dp_control.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-udatapath.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
udatapath/.deps/udatapath_ofdatapath-udatapath.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
udatapath/.deps/udatapath_ofdatapath-udatapath.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-udatapath.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-dp_actions.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
udatapath/.deps/udatapath_ofdatapath-dp_actions.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
udatapath/.deps/udatapath_ofdatapath-dp_actions.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-dp_actions.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-flow_entry.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
udatapath/.deps/udatapath_ofdatapath-flow_entry.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
udatapath/.deps/udatapath_ofdatapath-flow_entry.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-flow_entry.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-pipeline.Po: oflib/ofl.h oflib-exp/ofl-exp-openflow.h \
udatapath/.deps/udatapath_ofdatapath-pipeline.Po: include/openflow/nicira-ext.h oflib-exp/ofl-exp-nicira.h \
udatapath/.deps/udatapath_ofdatapath-pipeline.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-pipeline.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-group_entry.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
udatapath/.deps/udatapath_ofdatapath-group_entry.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
udatapath/.deps/udatapath_ofdatapath-group_entry.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-group_entry.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-action_set.Po: oflib/ofl.h oflib-exp/ofl-exp-openflow.h \
udatapath/.deps/udatapath_ofdatapath-action_set.Po: include/openflow/nicira-ext.h oflib-exp/ofl-exp-nicira.h \
udatapath/.deps/udatapath_ofdatapath-action_set.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-action_set.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-datapath.Po: oflib/ofl-messages.h oflib/ofl-structs.h oflib-exp/ofl-exp-openflow.h \
udatapath/.deps/udatapath_ofdatapath-datapath.Po: include/openflow/nicira-ext.h oflib-exp/ofl-exp-nicira.h \
udatapath/.deps/udatapath_ofdatapath-datapath.Po: lib/ofpbuf.h oflib-exp/ofl-exp.h oflib-exp/ofl-exp-match.h \
udatapath/.deps/udatapath_ofdatapath-datapath.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-datapath.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/.deps/udatapath_ofdatapath-datapath.Po:oflib-exp/ofl-exp-match.h:
udatapath/.deps/udatapath_ofdatapath-packet_handle_std.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
udatapath/.deps/udatapath_ofdatapath-packet_handle_std.Po: oflib-exp/ofl-exp-nicira.h udatapath/group_table.h \
udatapath/.deps/udatapath_ofdatapath-packet_handle_std.Po:oflib-exp/ofl-exp-openflow.h:
udatapath/.deps/udatapath_ofdatapath-packet_handle_std.Po:oflib-exp/ofl-exp-nicira.h:
udatapath/datapath.c:#include "oflib-exp/ofl-exp-nicira.h"
udatapath/datapath.c:#include "oflib-exp/ofl-exp-match.h"
udatapath/dp_exp.c:#include "oflib-exp/ofl-exp-openflow.h"
udatapath/dp_exp.c:#include "oflib-exp/ofl-exp-nicira.h"
udatapath/dp_exp.c:            switch(exp->type) {
udatapath/dp_exp.c:                	VLOG_WARN_RL(LOG_MODULE, &rl, "Trying to handle unknown experimenter type (%u).", exp->type);
udatapath/dp_exp.c:            switch (exp->type) {
udatapath/dp_ports.c:#include "oflib-exp/ofl-exp-openflow.h"
utilities/dpctl2.c:#include "oflib-exp/ofl-exp-openflow.h"
utilities/.deps/dpctl.Po: oflib-exp/ofl-exp-openflow.h oflib-exp/../oflib/ofl-structs.h \
utilities/.deps/dpctl.Po: oflib-exp/ofl-exp-match.h include/openflow/match-ext.h lib/flex-array.h \
utilities/.deps/dpctl.Po: oflib-exp/ofl-exp-ext-messages.h lib/command-line.h lib/compiler.h \
utilities/.deps/dpctl.Po:oflib-exp/ofl-exp-openflow.h:
utilities/.deps/dpctl.Po:oflib-exp/ofl-exp-match.h:
utilities/.deps/dpctl.Po:oflib-exp/ofl-exp-ext-messages.h:
utilities/dpctl.c:#include "oflib-exp/ofl-exp-openflow.h"
utilities/dpctl.c:#include "oflib-exp/ofl-exp-match.h"
utilities/dpctl.c:#include "oflib-exp/ofl-exp-ext-messages.h"
utilities/dpct2.c:#include "oflib-exp/ofl-exp-openflow.h"
utilities/dpct2.c:#include "oflib-exp/ofl-exp-match.h"
utilities/dpct2.c:#include "oflib-exp/ofl-exp-ext-messages.h"
Binary file utilities/dpctl.o matches
Binary file utilities/dpctl matches
